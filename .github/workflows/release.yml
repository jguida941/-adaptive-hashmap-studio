name: release

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      id-token: write
    env:
      REGISTRY: ghcr.io
      IMAGE_NAME: ${{ github.repository }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install -U pip
          python -m pip install -e '.[dev]'

      - name: Lint
        run: ruff check .

      - name: Type check
        run: mypy .

      - name: Test
        run: pytest -q

      - name: Build distribution
        run: |
          python -m pip install build
          python -m build --wheel --sdist --outdir dist

      - name: Generate SBOM (source)
        uses: anchore/sbom-action@v0
        with:
          path: .
          output-file: dist/source-sbom.spdx.json

      - name: Generate checksums
        run: |
          cd dist
          rm -f SHA256SUMS.txt
          for file in *; do
            if [ "$file" = "SHA256SUMS.txt" ]; then
              continue
            fi
            sha256sum "$file" >> SHA256SUMS.txt
          done

      - name: Upload to TestPyPI
        if: ${{ secrets.TEST_PYPI_API_TOKEN != '' }}
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.TEST_PYPI_API_TOKEN }}
        run: |
          python -m twine upload --repository testpypi --skip-existing dist/*

      - name: Upload to PyPI
        if: ${{ secrets.PYPI_API_TOKEN != '' }}
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: |
          python -m twine upload dist/*

      - name: Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=tag
            type=sha

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          provenance: true
          sbom: true
          build-args: |
            VERSION=${{ steps.meta.outputs.version }}
            VCS_REF=${{ github.sha }}
            BUILD_DATE=${{ steps.meta.outputs.created }}

      - name: Upload release artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/*

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            dist/*.whl
            dist/*.tar.gz
            dist/SHA256SUMS.txt
            dist/source-sbom.spdx.json
          generate_release_notes: true
